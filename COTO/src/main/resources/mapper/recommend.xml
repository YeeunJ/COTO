<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="recommend">

	<insert id="createRecomProblem" parameterType="com.walab.coding.model.RecommendDTO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO recommend (userID, title, difficulty, content) VALUES (#{userID}, #{title}, #{difficulty}, #{content})
	</insert>
	
	<select id="readRecommendList" resultType="com.walab.coding.model.RecommendDTO">
		SELECT recom.id as id, recom.userID as userID, recom.title as title, recom.content as content, us.nickname as nickname, recom.difficulty as difficulty, recom.regdate as regDate
		FROM recommend as recom left join user as us on recom.userID = us.id
		WHERE recom.deletedate IS NULL
	</select>
	
	<select id ="readRecentRecommendList" resultType="com.walab.coding.model.RecommendDTO" parameterType="hashmap">
		SELECT recommend.title FROM recommend ORDER BY regdate DESC LIMIT 0, 4;
	</select>
	
	<select id="readRecommendProblem" resultType="com.walab.coding.model.RecommendDTO">
		SELECT recom.id as id, recom.userID as userID, recom.title as title, recom.content as content, us.nickname as nickname, recom.difficulty as difficulty
		FROM recommend as recom left join user as us on recom.userID = us.id
		WHERE recom.deletedate IS NULL and recom.id = ${recomID}
	</select>
	
	<select id="readRecomByPage" resultType="com.walab.coding.model.RecommendDTO" parameterType="hashmap">
		SELECT recom.id as id, recom.title as title, recom.content as content, us.nickname as nickname, recom.difficulty as difficulty, recom.recomCount as recomCount, recom.recomCommentCount as recomCommentCount
		FROM (
			SELECT recom.*, if(count(rcm.id)=0, 0, count(rcm.id)) as recomCommentCount
			FROM (
				SELECT r.*, if(count(rc.id)=0, 0, count(rc.id)) as recomCount
				FROM recommend as r
				left outer JOIN recomCount as rc ON r.id = rc.recomID
				GROUP BY r.id
			) as recom left outer join recomComment as rcm ON recom.id = rcm.recomID
            GROUP BY recom.id
		) as recom left outer join user as us on recom.userID = us.id
		<foreach item="item" index="index" collection="tagValue" open=" join  (select distinct recomID from recomTag where tag like " separator=" or tag like " close=" ) as tag ON recom.id = tag.recomID ">
			#{item}
		</foreach>
		where recom.title like CONCAT('%',#{searchValue},'%') AND recom.deletedate IS NULL
		order by
		<choose>
		    <when test="orderValue eq 'recom.difficulty desc'">recom.difficulty desc</when>
		    <when test="orderValue eq 'recom.title'">recom.title</when>
		    <when test="orderValue eq 'recom.recomCount desc'">recom.recomCount desc</when>
		    <when test="orderValue eq 'recom.regdate desc'">recom.regdate desc</when>
		    <otherwise>recom.regdate</otherwise>
		</choose>
		LIMIT #{s_point}, #{list}
	</select>
	
	<select id="readRecomByPageTag" resultType="com.walab.coding.model.RecommendDTO" parameterType="hashmap">
		SELECT recom.id as id, recom.title as title, recom.content as content, us.nickname as nickname, recom.difficulty as difficulty, recom.recomCount as recomCount, recom.recomCommentCount as recomCommentCount
		FROM (
			SELECT recom.*, if(count(rcm.id)=0, 0, count(rcm.id)) as recomCommentCount
			FROM (
				SELECT r.*, if(count(rc.id)=0, 0, count(rc.id)) as recomCount
				FROM (
					SELECT re.*
                    FROM YeeunJ.recomTag as rt LEFT OUTER JOIN YeeunJ.recommend as re ON re.id = rt.recomID
                    WHERE rt.tag = #{tagName}
				) as r
				left outer JOIN recomCount as rc ON r.id = rc.recomID
				GROUP BY r.id
			) as recom left outer join recomComment as rcm ON recom.id = rcm.recomID
            GROUP BY recom.id
		) as recom left outer join user as us on recom.userID = us.id
		<foreach item="item" index="index" collection="tagValue" open=" join  (select distinct recomID from recomTag where tag like " separator=" or tag like " close=" ) as tag ON recom.id = tag.recomID ">
			#{item}
		</foreach>
		where recom.title like CONCAT('%',#{searchValue},'%') AND recom.deletedate IS NULL
		order by
		<choose>
		    <when test="orderValue eq 'recom.difficulty desc'">recom.difficulty desc</when>
		    <when test="orderValue eq 'recom.title'">recom.title</when>
		    <when test="orderValue eq 'recom.recomCount desc'">recom.recomCount desc</when>
		    <when test="orderValue eq 'recom.regdate desc'">recom.regdate desc</when>
		    <otherwise>recom.regdate</otherwise>
		</choose>
		LIMIT #{s_point}, #{list}
	</select>
	
	<select id="readRecomListCnt" resultType="int">
		SELECT COUNT(*) as listCnt FROM recommend
	</select>
	
	<update id="updateRecommend" parameterType="hashmap">
		UPDATE recommend SET title=#{title}, difficulty=#{difficulty}, content=#{content} where id = #{id}
	</update>
	
	<update id="deleteRecom" parameterType="hashmap">
		UPDATE YeeunJ.recommend 
		SET deletedate = now()
		WHERE id = #{recomID};
	</update>





	
	
	
	
	<select id="searchRecommendList" resultType="com.walab.coding.model.RecommendDTO" parameterType="hashmap">
		SELECT recom.id as id, recom.title as title, recom.content as content, us.nickname as nickname, recom.difficulty as difficulty, recom.recomCount as recomCount, recom.recomCommentCount as recomCommentCount
		FROM (
			SELECT recom.*, if(count(rcm.id)=0, 0, count(rcm.id)) as recomCommentCount
			FROM (
				SELECT r.*, if(count(rc.id)=0, 0, count(rc.id)) as recomCount
				FROM recommend as r
				left outer JOIN recomCount as rc ON r.id = rc.recomID
				GROUP BY r.id
			) as recom left outer join recomComment as rcm ON recom.id = rcm.recomID
            GROUP BY recom.id
		) as recom left outer join user as us on recom.userID = us.id
		where recom.title like #{searchValue} AND recom.deletedate IS NULL
		order by
		<choose>
		    <when test="orderValue eq 'recom.difficulty desc'">recom.difficulty desc</when>
		    <when test="orderValue eq 'recom.title'">recom.title</when>
		    <when test="orderValue eq 'recom.recomCount desc'">recom.recomCount desc</when>
		    <when test="orderValue eq 'recom.regdate desc'">recom.regdate desc</when>
		    <otherwise>recom.regdate</otherwise>
		</choose>
		<!-- #{orderValue} -->
	</select>
	
	<select id="readRecommendProblemList" resultType="com.walab.coding.model.RecomProblemDTO" parameterType="hashmap">
		SELECT cs.siteName as site, rp.problem as problem, rp.difficulty as difficulty
		FROM recomProblems as rp left join codingSite as cs on rp.site = cs.id
		WHERE rp.recomID = #{recomID}
	</select>
</mapper>